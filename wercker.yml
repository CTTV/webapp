# use a long-term-support (LTS) version of node. Latest is currently Boron
box: node:boron
dev:
  steps:
    - npm-install
    - internal/watch:
        code: npm start
        reload: true
build:
  steps:

    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

    - npm-install:
        clear-cache-on-failed: true
        options: --quiet

    # #run unit tests
    # - npm-test
    - script:
        name: run bower, gulp and jspm for good measure
        code: |
          npm run setup

  after-steps:
    - mbrevda/github-status:
        token: $GITHUB_TOKEN
        context: webapp_deployment
        msg: webapp code build succesful
        fail: error in code build (npm, bower, jspm, gulp)
        url: https://app.wercker.com/OpenTargets/webapp/runs

push-debug:
  steps:
    - internal/docker-push:
      repository: quay.io/opentargets/webapp
      username: $QUAY_USERNAME
      password: $QUAY_PASSWORD
      registry: $QUAY_HOST
      tag: debug-$WERCKER_GIT_COMMIT
      working-dir: /pipeline/source
      cmd: npm start

push-release:
  # Override the node box
  box:
    id: nginx:alpine
    cmd: /bin/sh

  steps:
    - script:
      name: move entrypoint script in container
      code: |
        mv ./docker-entrypoint.sh /
        chmod +x /docker-entrypoint.sh


    - script:
      name: move app and built js modules to /var/www
      code: |
        mkdir -p /var/www/app
        cp -r ./app /var/www

    - script:
      name: move self-signed certificates in the right place
      code: |
        cp ./nginx_conf/server.crt /usr/share/nginx/
        cp ./nginx_conf/server.key /usr/share/nginx/

    - script:
      name: move nginx.conf and template in the right place
      code: |
        cp ./nginx_conf/nginx.conf /etc/nginx/nginx.conf
        cp ./nginx_conf/app_server.template /etc/nginx/conf.d/app_server.template
        cp ./nginx_conf/rest_api_scheme.template /etc/nginx/conf.d/rest_api_scheme.template

    # i found out the hard way that the /pipeline/source directory needs
    # to be there for things to work in wercker
    - script:
      name: cleanup all the wercker stuff
      code: |
        rm -rf /pipeline/cache
        rm -rf /pipeline/source/*


    - script:
      name: export latest or dev tag
      code: |
        [ "$WERCKER_GIT_BRANCH" = "master" ] \
        && export LATEST_FLAG=latest \
        || export LATEST_FLAG=dev


    - internal/docker-push:
      disable-sync: true
      username: $QUAY_USERNAME
      password: $QUAY_PASSWORD
      tag: release-$WERCKER_GIT_COMMIT $WERCKER_GIT_BRANCH $LATEST_FLAG
      repository: quay.io/opentargets/webapp
      registry: $QUAY_HOST
      working-dir: /var/www/app
      ports: "80 443"
      cmd: nginx -g 'daemon off;'
      entrypoint: /docker-entrypoint.sh
      volumes: /var/cache/nginx

    - internal/docker-push:
      disable-sync: true
      username: _json_key
      password: $GCR_JSON_KEY_FILE
      tag: release-$WERCKER_GIT_COMMIT $WERCKER_GIT_BRANCH $LATEST_FLAG
      repository: eu.gcr.io/open-targets/webapp-prod
      registry: $GCR_HOST
      working-dir: /var/www/app
      ports: "80 443"
      cmd: nginx -g 'daemon off;'
      entrypoint: /docker-entrypoint.sh
      volumes: /var/cache/nginx

  after-steps:
        - wantedly/pretty-slack-notify:
            webhook_url: $SLACK_WEBHOOK_URL
            notify_on: "failed"
        - mbrevda/github-status:
            token: $GITHUB_TOKEN
            context: webapp_deployment
            msg: release container pushed to registry
            fail: an error has occurred while creating the release container
            url: https://app.wercker.com/OpenTargets/webapp/runs
