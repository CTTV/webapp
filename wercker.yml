# use a long-term-support (LTS) version of node. Latest is currently Boron
box: node:boron
dev:
  steps:
    - npm-install
    - internal/watch:
        code: npm start
        reload: true
build:
  steps:

    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

    - npm-install:
        clear-cache-on-failed: true
        options: --quiet

    # #run unit tests
    # - npm-test
    - script:
        name: run bower, gulp and jspm for good measure
        code: |
          npm run setup

push-debug:
  steps:
    - internal/docker-push:
      repository: quay.io/opentargets/webapp
      username: $QUAY_USERNAME
      password: $QUAY_PASSWORD
      registry: $QUAY_HOST
      tag: debug-$WERCKER_GIT_COMMIT
      working-dir: /pipeline/source
      cmd: npm start

push-release:
  # Override the node box
  box:
    id: nginx:alpine
    cmd: /bin/sh

  steps:
    - script:
      name: forward deployment scripts
      code: |
        mv docker-entrypoint.sh "$WERCKER_OUTPUT_DIR"
        ls -l $WERCKER_OUTPUT_DIR/


    - script:
      name: mv static files
      code: |
        mkdir -p /var/www/app
        cp -r ./app /var/www

    - script:
      name: cleanup build result
      code: rm -rf *

    - script:
      name: export latest or dev tag
      code: |
        [ "$WERCKER_GIT_BRANCH" = "master" ] \
        && export LATEST_FLAG=latest \
        || export LATEST_FLAG=dev

    - internal/docker-push:
      disable-sync: true
      repository: quay.io/opentargets/webapp
      username: $QUAY_USERNAME
      password: $QUAY_PASSWORD
      registry: $QUAY_HOST
      tag: release-$WERCKER_GIT_COMMIT $WERCKER_GIT_BRANCH $LATEST_FLAG
      working-dir: /var/www/app
      ports: "80 443"
      cmd: nginx -g 'daemon off;'

    - internal/docker-push:
      username: _json_key
      password: $GCR_JSON_KEY_FILE
      working-dir: /var/www/app
      tag: release-$WERCKER_GIT_COMMIT $WERCKER_GIT_BRANCH $LATEST_FLAG
      repository: eu.gcr.io/open-targets/webapp-prod
      registry: $GCR_HOST
      ports: "80 443"
      cmd: nginx -g 'daemon off;'
