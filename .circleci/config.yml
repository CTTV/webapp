version: 2
jobs:
  build:
    docker:
      # use a long-term-support (LTS) version of node. Latest is currently Boron
      - image: circleci/node:boron
    
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-yarn-deps-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-yarn-deps-

      - run:
          name: yarn run full-install
          command: yarn run full-install


      - save_cache:
          key: v1-yarn-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run:
          name: running es lint
          command: ./node_modules/.bin/eslint -f html -o eslint.html 'app/js/**.js' || exit 0

      - store_artifacts:
          path: eslint.html
          prefix: eslint
          destination: eslint

      #TODO: splitting test (above) when they get added :) and container push

      - setup_remote_docker
      - run:
          name: Build container
          command: |
            docker build -t circle-${CIRCLE_SHA1} .
      - run:
          name: Push container to quay.io
          command: |
            docker login -u="opentargets+quaybot" -p="${QUAYBOT_PASSWORD}" quay.io
            ## branch tag and push
            docker tag circle-${CIRCLE_SHA1} ${QUAY_REPO}:${CIRCLE_BRANCH}
            docker push ${QUAY_REPO}:${CIRCLE_BRANCH}
            ## sha commit push
            docker tag ${QUAY_REPO}:${CIRCLE_BRANCH} ${QUAY_REPO}:circle-${CIRCLE_SHA1}
            docker push ${QUAY_REPO}:circle-${CIRCLE_SHA1}
            ## push latest tag only if master
            if [ "$CIRCLE_BRANCH" = "master" ] 
              then
                docker tag ${QUAY_REPO}:${CIRCLE_BRANCH} ${QUAY_REPO}:latest
                docker push ${QUAY_REPO}:latest
            fi
 

